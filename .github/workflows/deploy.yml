name: 'Deploy'

on:
  push:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: List workspaces to lint
        id: lint
        run: echo "::set-output name=matrix::$(yarn jill list --with-script lint --json)"

      - name: List workspaces to test
        id: test
        run: echo "::set-output name=matrix::$(yarn jill list --with-script test --json)"

    outputs:
      matrix-lint: ${{ steps.lint.outputs.matrix }}
      matrix-test: ${{ steps.test.outputs.matrix }}

  build-libs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Build libraries
        run: yarn run build:libs

      - uses: actions/upload-artifact@v3
        with:
          name: build-libs-artifacts
          path: libs/*/dist/*

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    if: ${{ fromJson(needs.setup.outputs.matrix-lint)[0] }}

    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix-lint) }}

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Lint
        run: yarn workspace ${{ matrix.name }} lint

  test:
    runs-on: ubuntu-latest
    needs: [setup, build-libs]
    if: ${{ fromJson(needs.setup.outputs.matrix-lint)[0] }}

    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix-test) }}

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-libs-artifacts
          path: packages

      - name: Test
        run: yarn workspace ${{ matrix.name }} test

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.slug }}-coverage
          path: ${{ matrix.root }}/coverage

  publish:
    runs-on: ubuntu-latest
    needs: [lint, test]

    permissions:
      packages: write

    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix-publish) }}

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ants'

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-libs-artifacts
          path: packages

      - name: Publish
        run: yarn workspaces foreach --no-private npm publish --access public --tolerate-republish
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  terraform:
    runs-on: ubuntu-latest
    environment: terraform
    needs: [lint, test]

    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -input=false

  deploy-ants:
    name: 'deploy @ants/frontend'
    runs-on: ubuntu-latest
    environment: frontend
    needs: [terraform]

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-libs-artifacts
          path: packages

      - name: Build frontend
        run: yarn workspace @ants/frontend build

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-3
          role-to-assume: arn:aws:iam::220263915826:role/ants-github-actions

      - name: Deploy frontend to AWS
        working-directory: apps/frontend
        run: |
          aws s3 sync ./dist s3://jujulego-ants-frontend

  deploy-api:
    name: 'deploy @ants/api'
    runs-on: ubuntu-latest
    environment: serverless
    needs: [terraform]

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-libs-artifacts
          path: packages

      - name: Deploy api
        run: yarn workspace @ants/api sls deploy --verbose
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
