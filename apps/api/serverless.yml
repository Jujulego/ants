org: jujulego
app: ants
service: ants-api
frameworkVersion: '3'

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  data-table: 'ants-data-${sls:stage}'
  tiles-table: 'ants-tiles-${sls:stage}'

  esbuild:
    bundle: true
    minify: false
#    sourcemap: true

package:
  individually: true

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-3
  deploymentMethod: direct

  tracing:
    lambda: true
    apiGateway: true

  environment:
#    NODE_OPTIONS: '--enable-source-maps'
    DATA_TABLE_NAME: ${self:custom.data-table}
    TILES_TABLE_NAME: ${self:custom.tiles-table}
    AUTH_CLIENT_ID: ${ssm:/ants/${sls:stage}/client-id}
    AUTH_USER_POOL_ID: ${ssm:/ants/${sls:stage}/user-pool-id}

  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:4000
        - https://jujulego.github.io
      allowedHeaders:
        - Authorization
        - Content-Type

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt DataTable.Arn
            - !Sub '${DataTable.Arn}/index/*'
            - !GetAtt TilesTable.Arn

  tags:
    Project: ants

  stackTags:
    Project: ants

functions:
  listTileMaps:
    handler: src/tile-maps/handlers.list
    events:
      - httpApi:
          path: /api/tile-maps
          method: get

  createTileMap:
    handler: src/tile-maps/handlers.create
    events:
      - httpApi:
          path: /api/tile-maps
          method: post

  getTileMap:
    handler: src/tile-maps/handlers.getById
    events:
      - httpApi:
          path: /api/tile-maps/{id}
          method: get

  updateTileMap:
    handler: src/tile-maps/handlers.update
    events:
      - httpApi:
          path: /api/tile-maps/{id}
          method: put

  deleteTileMap:
    handler: src/tile-maps/handlers.deleteById
    events:
      - httpApi:
          path: /api/tile-maps/{id}
          method: delete

resources:
  Resources:
    DataTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.data-table}
        AttributeDefinitions:
          - AttributeName: table
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: table
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: table-index
            Projection:
              ProjectionType: KEYS_ONLY
            KeySchema:
              - AttributeName: table
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        Tags:
          - Key: Project
            Value: ants
          - Key: STAGE
            Value: ${sls:stage}

    TilesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tiles-table}
        AttributeDefinitions:
          - AttributeName: blockId
            AttributeType: S
          - AttributeName: tileId
            AttributeType: S
        KeySchema:
          - AttributeName: blockId
            KeyType: HASH
          - AttributeName: tileId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        Tags:
          - Key: Project
            Value: ants
          - Key: STAGE
            Value: ${sls:stage}
